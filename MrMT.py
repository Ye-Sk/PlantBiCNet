import scipy
import numpy as np
from sklearn import linear_model
import matplotlib.pyplot as plt

gt = \
    [50, 67, 62, 62, 3, 3, 9, 10, 15, 4, 15, 4, 20, 4, 28, 10, 10, 30, 14, 18, 35, 18, 41, 38, 18, 38, 19, 50, 29,
     49, 33, 47, 27, 54, 33, 52, 35, 50, 35, 40, 39, 41, 43, 41, 4, 11, 12, 14, 15, 17, 16, 16, 21, 21, 36, 20, 25,
     37, 32, 44, 34, 46, 34, 44, 34, 45, 31, 44, 33, 47, 33, 49, 30, 49, 44, 44, 44, 54, 44, 57, 54, 49, 49, 56, 48,
     50, 50, 50, 49, 50, 48, 53, 50, 52, 52, 50, 39, 34, 41, 20, 41, 55, 61, 74, 7, 14, 15, 15, 14, 14, 21, 22, 37,
     38, 42, 41, 42, 40, 41, 43, 42, 17, 29, 32, 2, 2, 2, 2, 2, 2, 2, 2, 6, 6, 8, 8, 9, 12, 11, 10, 10, 14, 14, 15,
     13, 21, 21, 19, 22, 19, 18, 20, 21, 20, 20, 21, 19, 19, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 15, 15, 15, 14,
     14, 13, 13, 13, 14, 14, 14, 14, 14, 12, 14, 14, 14, 14, 14, 13, 13, 13, 13, 13, 13, 15, 16, 16, 15, 15, 15, 16,
     16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 15, 16, 79, 75, 79, 77, 78, 79, 78, 80, 77, 77, 80, 79, 76, 78, 78,
     78, 79, 78, 78, 78, 64, 65, 64, 64, 65, 63, 66, 67, 66, 65, 66, 65, 66, 65, 66, 67, 67, 68, 69, 68, 67, 67, 68,
     67, 67, 66, 64, 65, 65, 65, 65, 65, 64, 64, 67, 67, 67, 67, 67, 67, 67, 67, 67, 66, 66, 65, 64, 64, 64, 65, 62,
     63, 63, 62, 65, 64, 66, 67, 63, 64, 48, 50, 48, 49, 48, 49, 48, 44, 47, 48, 46, 51, 47, 45, 44, 50, 50, 45, 49,
     48, 49, 48, 49, 51, 46, 67, 73, 67, 74, 67, 74, 67, 79, 67, 73, 67, 74, 65, 74, 63, 75, 66, 75, 64, 75, 65, 73,
     64, 73, 63, 108, 104, 103, 108, 118, 115, 121, 119, 110, 111, 111, 101, 108, 109, 110, 111, 117, 110, 113, 120,
     109, 107, 102, 107, 102]

pd = \
    [44, 68, 58, 58, 4, 4, 11, 12, 15, 4, 18, 6, 22, 3, 31, 10, 10, 30, 17, 17, 37, 18, 38, 39, 21, 43, 25, 48, 32,
     48, 34, 47, 31, 52, 36, 51, 33, 51, 38, 39, 41, 41, 42, 42, 4, 8, 10, 14, 14, 14, 14, 15, 21, 24, 32, 17, 23,
     41, 35, 41, 35, 44, 37, 41, 32, 46, 28, 42, 31, 43, 25, 44, 27, 44, 39, 40, 38, 52, 40, 50, 48, 46, 47, 51, 48,
     50, 47, 48, 46, 45, 41, 50, 49, 50, 52, 46, 41, 33, 39, 17, 34, 54, 63, 73, 6, 11, 12, 14, 16, 14, 18, 22, 31,
     33, 41, 39, 40, 41, 43, 44, 43, 16, 28, 26, 4, 7, 8, 3, 3, 3, 6, 3, 6, 6, 5, 4, 7, 6, 9, 10, 11, 12, 14, 12,
     13, 20, 19, 16, 22, 18, 16, 16, 21, 15, 16, 21, 17, 20, 19, 21, 21, 21, 20, 20, 21, 22, 20, 22, 15, 15, 15, 14,
     13, 14, 13, 13, 13, 14, 13, 15, 15, 14, 14, 13, 12, 13, 14, 15, 13, 13, 13, 14, 14, 16, 16, 14, 14, 17, 18, 16,
     18, 17, 17, 18, 19, 16, 17, 18, 17, 17, 17, 17, 18, 79, 73, 80, 77, 77, 78, 78, 80, 79, 80, 75, 75, 77, 78, 77,
     76, 76, 77, 77, 75, 64, 63, 64, 60, 59, 61, 64, 63, 63, 65, 69, 60, 63, 71, 66, 63, 60, 65, 64, 61, 65, 65, 65,
     66, 64, 66, 63, 65, 65, 65, 66, 65, 65, 66, 67, 67, 68, 69, 69, 69, 66, 70, 66, 71, 67, 61, 66, 67, 76, 62, 66,
     62, 66, 63, 66, 66, 70, 71, 73, 67, 51, 54, 50, 51, 49, 53, 47, 51, 51, 47, 47, 51, 48, 50, 51, 54, 50, 49, 49,
     51, 49, 52, 44, 51, 49, 66, 78, 67, 76, 66, 80, 66, 77, 66, 79, 65, 74, 64, 79, 63, 77, 66, 76, 66, 76, 66, 76,
     68, 76, 63, 109, 106, 109, 113, 118, 119, 122, 121, 117, 117, 118, 114, 114, 118, 118, 117, 119, 120, 120, 122,
     126, 123, 121, 121, 121]

pdv2 = \
    [45, 66, 57, 59, 4, 4, 11, 12, 18, 4, 17, 4, 19, 4, 29, 12, 11, 30, 16, 17, 37, 19, 39, 38, 20, 38, 23, 49, 30, 50,
     31, 49, 31, 52, 35, 52, 39, 53, 35, 42, 41, 40, 42, 43, 3, 9, 10, 11, 13, 16, 14, 12, 23, 19, 34, 20, 26, 40, 37,
     42, 35, 47, 36, 43, 32, 46, 31, 46, 30, 46, 27, 46, 26, 48, 39, 40, 38, 54, 40, 50, 54, 49, 49, 53, 51, 50, 49, 50,
     46, 47, 39, 51, 50, 47, 48, 48, 42, 30, 40, 18, 37, 52, 63, 72, 7, 11, 11, 12, 15, 14, 19, 22, 36, 39, 42, 39, 40,
     44, 44, 47, 45, 17, 30, 31, 1, 2, 4, 4, 5, 2, 2, 2, 6, 3, 3, 2, 5, 4, 5, 7, 7, 12, 14, 11, 9, 16, 16, 12, 18, 18,
     16, 13, 20, 16, 18, 22, 20, 20, 19, 21, 19, 18, 21, 21, 23, 21, 16, 19, 15, 15, 15, 14, 14, 13, 14, 14, 13, 16, 13,
     15, 14, 15, 15, 13, 13, 14, 14, 13, 13, 13, 13, 15, 15, 14, 15, 16, 17, 19, 19, 16, 17, 16, 19, 19, 18, 19, 17, 19,
     18, 17, 18, 17, 18, 82, 76, 79, 77, 79, 78, 79, 78, 78, 74, 76, 75, 77, 76, 77, 78, 77, 76, 75, 77, 64, 68, 64, 66,
     64, 66, 66, 67, 65, 67, 66, 65, 64, 69, 62, 61, 67, 67, 70, 66, 68, 69, 68, 68, 69, 69, 68, 69, 65, 67, 68, 67, 69,
     69, 68, 69, 68, 68, 71, 69, 70, 71, 71, 71, 72, 71, 71, 78, 74, 67, 67, 67, 69, 72, 71, 72, 71, 72, 70, 70, 51, 54,
     49, 51, 49, 54, 49, 54, 50, 48, 48, 52, 50, 50, 46, 54, 49, 51, 51, 49, 48, 53, 45, 53, 47, 69, 78, 67, 78, 66, 79,
     67, 75, 67, 78, 67, 76, 63, 77, 62, 77, 65, 77, 65, 78, 67, 77, 66, 75, 64, 110, 114, 112, 118, 126, 128, 126, 128,
     125, 125, 127, 122, 127, 126, 130, 127, 128, 129, 130, 130, 129, 129, 124, 126, 128]


def rsquared(pd, gt):
    """ Return R^2 where x and y are array-like."""
    pd, gt = np.array(pd), np.array(gt)
    slope, intercept, r_value, p_value, std_err = scipy.stats.linregress(pd, gt)
    return r_value**2


def plot_r2(gt, pd, gtv2, pdv2):

    r2 = rsquared(pd,gt)
    r2v2 = rsquared(pdv2,gtv2)

    pd, gt = np.array(pd).reshape(-1, 1), np.array(gt).reshape(-1, 1)
    pdv2, gtv2 = np.array(pdv2).reshape(-1, 1), np.array(gtv2).reshape(-1, 1)

    upper = int(max(max(pd), max(gt)))
    ww=list(range(25, upper+30, 25))
    ww = np.array(ww).reshape(-1, 1)
    LR=linear_model.LinearRegression()
    LR.fit(gt,pd)
    predictions = LR.predict(ww)

    LRv2=linear_model.LinearRegression()
    LRv2.fit(gtv2, pdv2)
    predictionsv2 = LRv2.predict(ww)

    cv1 = np.array([255, 94, 0]) / 255.
    cv2 = 'c'

    plt.figure(dpi=300)
    plt.ylim(min(ww), max(ww))
    plt.xlim(min(ww), max(ww))

    # point
    plt.plot(ww, predictions, color=cv1)
    plt.plot(ww, predictionsv2, color=cv2, linestyle='--')
    plt.scatter(gt, pd, color=cv1, marker = '.', alpha=0.5, edgecolors='none', s=40)
    plt.scatter(gtv2, pdv2, color=cv2, marker = '^', alpha=0.8, edgecolors='none', s=15)


    # plt.plot(ww, ww, color='black',  linestyle=':') # baseline

    legend = plt.legend(labels=(r"PlantBiCNet: $R^2={0:.4f}$".format(r2),
                       r"PlantBiCNet-Lite: $R^2={0:.4f}$".format(r2v2)),
               loc=(0.04, 0.77),
               fancybox=True, borderpad=0.8, fontsize=11, labelspacing=0.65)

    for line in legend.get_lines():
        line.set_linewidth(2)

    plt.title('MrMT', fontsize=16)
    plt.ylabel('Prediction', fontsize=14)
    plt.xlabel('Ground Truth', fontsize=14)

    plt.tight_layout()
    plt.savefig('MrMT.png')
    # plt.show()


plot_r2(gt, pd, gt, pdv2)
